1 spring 的单例模式如果保证多用户获取各自数据的？
	1 因为user对象是实体对象，不被spring的IOC托管
	2 如果某个spring托管的对象A，定义了一个user对象的成员属性，那么这个成员user属性是线程不安全的
	3 所有用户使用对象A是，获取到的user数据都是一样的
	4 就相当于A类中定义了一个静态成员属性 static int i = 1;所有人取到的i都是1
	5 spring托管的对象是单例的，里面定义的成员属性是不会变的，如果这个成员属性不是功能，而是数据，而这个数据
	  又不是公共的，那么这个数据就不能定义成成员属性，否则线程不安全，除非改成多例模式
	6 我以前一直以为每个线程使用的都是各自的对象，也就是一个线程，IOC就创建一遍所有的对象给这个线程使用
	  现在想想，这得多么消耗内存，spring的IOC的单例模式，太牛皮了
	7 spring所托管的对象都是工具，即使成员属性是数据，也是工具数据，可以共用的数据，也是工具
	  实体对象，每个线程操作具体的业务数据，是自己创建在当前这个线程内使用的
	  也就是工具可以共用，数据是私有的线程管理和使用
	8 所有spring容器IOC管理的对象都是单例的，所有线程操作的都是同一个对象
	9 CPU决定哪个线程先使用这个对象
2 堆，栈，常量池 ，对象 如果存储数据的和特性？